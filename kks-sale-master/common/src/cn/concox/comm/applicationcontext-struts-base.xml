<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="  
       http://www.springframework.org/schema/beans  
       http://www.springframework.org/schema/beans/spring-beans-3.2.xsd  
       http://www.springframework.org/schema/tx  
       http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
       http://www.springframework.org/schema/aop  
       http://www.springframework.org/schema/aop/spring-aop-3.2.xsd  
       http://www.springframework.org/schema/context  
       http://www.springframework.org/schema/context/spring-context-3.2.xsd">

	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<value>classpath:c3p0-config.properties</value>
		</property>
	</bean>

	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="finalize">

		<property name="driverClass" value="${JDBC.driverClassName}" />

		<property name="jdbcUrl" value="${JDBC.url}" />

		<property name="user" value="${JDBC.username}" />

		<property name="password" value="${JDBC.password}" />

		<property name="minPoolSize" value="${C3P0.minPoolSize}" />

		<property name="preferredTestQuery" value="${C3P0.preferredTestQuery}" />

		<property name="maxPoolSize" value="${C3P0.maxPoolSize}" />

		<property name="initialPoolSize" value="${C3P0.initialPoolSize}" />

		<property name="maxIdleTime" value="${C3P0.maxIdleTime}" />

		<property name="acquireIncrement" value="${C3P0.acquireIncrement}" />

		<property name="maxStatements" value="${C3P0.maxStatements}" />

		<property name="maxStatementsPerConnection" value="${C3P0.maxStatementsPerConnection}" />

		<property name="idleConnectionTestPeriod" value="${C3P0.idleConnectionTestPeriod}" />

		<property name="acquireRetryAttempts" value="${C3P0.acquireRetryAttempts}" />

		<property name="testConnectionOnCheckout" value="${C3P0.testConnectionOnCheckout}" />

		<property name="acquireRetryDelay" value="${C3P0.acquireRetryDelay}" />

		<property name="breakAfterAcquireFailure" value="${C3P0.breakAfterAcquireFailure}" />
	</bean>

	<!-- 创建SqlSessionFactory，同时指定数据源 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis-config.xml" />
		<property name="configurationProperties">
			<props>
				<prop key="logImpl">LOG4J</prop>
			</props>
		</property>
		<property name="mapperLocations">
			<list>
				<value>classpath:com/ddsha/config/mapper/*.xml</value>
			</list>
		</property>
	</bean>

	<!-- 配置事务管理器，注意这里的dataSource和SqlSessionFactoryBean的dataSource要一致，不然事务就没有作用了 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- 配置事务的传播特性 -->
	<!-- <bean id="baseTransactionProxy" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean" 
		abstract="true"> -->
	<!-- <property name="transactionManager" ref="transactionManager" /> -->
	<!-- <property name="transactionAttributes"> -->
	<!-- <props> -->
	<!-- <prop key="add*">PROPAGATION_REQUIRED</prop> -->
	<!-- <prop key="edit*">PROPAGATION_REQUIRED</prop> -->
	<!-- <prop key="remove*">PROPAGATION_REQUIRED</prop> -->
	<!-- <prop key="insert*">PROPAGATION_REQUIRED</prop> -->
	<!-- <prop key="update*">PROPAGATION_REQUIRED</prop> -->
	<!-- <prop key="del*">PROPAGATION_REQUIRED</prop> -->
	<!-- <prop key="cancel*">PROPAGATION_REQUIRED</prop> -->
	<!-- <prop key="*">readOnly</prop> -->
	<!-- </props> -->
	<!-- </property> -->
	<!-- </bean> -->

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.ddsha.business.user.mapper" />
		<!-- <property name="markerInterface" value="cn.cicove.common.base.rom.SqlMapper"/> -->
	</bean>

	<context:component-scan
		base-package="com.ddsha.api;com.ddsha.client.web;cn.cicove.common.util.struts2.common"
		use-default-filters="false">
		<!-- 扫描符合@Service @Repository的类 -->
		<!-- <context:include-filter type="annotation" expression="org.springframework.stereotype.Service" /> -->
		<!-- <context:include-filter type="annotation" expression="org.springframework.stereotype.Repository" /> -->
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Component" />
	</context:component-scan>

</beans>

 
