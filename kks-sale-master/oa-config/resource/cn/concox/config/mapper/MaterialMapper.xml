<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
                        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.concox.app.material.mapper.MaterialMapper">

   <resultMap id="queryList_resultMap" type="Material" >
   </resultMap>
   
   <sql id="selectAllFields">
    SELECT id, depot, materialType, proNO, proName, proSpeci, masterOrSlave, lossType, consumption, totalNum, 
           analyzeNum, retailPrice, state, remark, createTime, updateTime 
    FROM t_sale_material
    </sql>
        
    <insert id="insert" parameterType="Material">
       INSERT INTO t_sale_material (id,
       		depot, materialType, proNO, proName, proSpeci, masterOrSlave, lossType, consumption, 
       		totalNum, analyzeNum,retailPrice, state, remark, createTime, updateTime
        ) VALUES (#{id},
            #{depot}, #{materialType}, #{proNO}, #{proName}, #{proSpeci}, #{masterOrSlave}, #{lossType}, #{consumption}, 
            #{totalNum}, #{analyzeNum}, #{retailPrice}, #{state}, #{remark}, #{createTime}, #{updateTime}
        )
    </insert>
    
    <select id="getT" parameterType="String" resultType="Material">
         <include refid="selectAllFields" />
        	WHERE id = #{id}
    </select>
    
   <select id="getInfoByProNOAndMasterOrSlave" parameterType="String" resultType="Material">
         <include refid="selectAllFields" />
        	WHERE proNO = #{proNO} AND masterOrSlave = #{masterOrSlave}
    </select>
    
    <update id="update" parameterType="Material">
        UPDATE t_sale_material
        <set>
            <if test="depot != null and depot != ''"> depot = #{depot}, </if>
            <if test="materialType != null"> materialType = #{materialType}, </if>
            <if test="proNO != null and proNO != ''"> proNO = #{proNO}, </if>
            <if test="proName != null and proName != ''"> proName = #{proName}, </if>
            <if test="proSpeci != null and proSpeci != ''"> proSpeci = #{proSpeci}, </if>
            <if test="masterOrSlave != null and masterOrSlave != ''"> masterOrSlave = #{masterOrSlave}, </if>
            <if test="lossType != null and lossType != ''"> lossType = #{lossType}, </if>
            <if test="consumption != null"> consumption = #{consumption}, </if>
            <if test="totalNum != null"> totalNum = #{totalNum}, </if>
            <if test="analyzeNum != null"> analyzeNum = #{analyzeNum}, </if>
            <if test="retailPrice != null"> retailPrice = #{retailPrice}, </if>
            <if test="state != null and state != ''"> state = #{state}, </if>
            <if test="createTime != null"> createTime = #{createTime}, </if>
            <if test="updateTime != null"> updateTime = #{updateTime}, </if>
            <if test="remark != null"> remark = #{remark}, </if>
        </set>
        WHERE id = #{id}
    </update>
    
    <delete id="delete">
       DELETE FROM t_sale_material
       WHERE id IN
       <foreach collection="array" item="id" open="(" separator="," close=")">
           #{id}
       </foreach>
    </delete>
    
     <select id="queryListPage" resultMap="queryList_resultMap" parameterType="Material">
       <include refid="selectAllFields" />
	    <where>
	    	<if test="po.materialType != null"> and materialType = #{po.materialType}</if>
		    <if test="po.proNO != null and po.proNO != ''"> and proNO like concat('%', '${po.proNO}', '%')</if>
			<if test="po.proName != null and po.proName != ''"> and proName like concat('%', '${po.proName}', '%')</if>
	    </where>
		ORDER BY materialType, createTime DESC
    </select>
    
    <select id="queryList" resultMap="queryList_resultMap" parameterType="Material">
		 <include refid="selectAllFields" />
	    <where>
	    	<if test="materialType != null"> and materialType = #{materialType}</if>
		    <if test="proNO != null and proNO != ''"> and proNO like concat('%', '${proNO}', '%')</if>
			<if test="proName != null and proName != ''"> and proName like concat('%', '${proName}', '%')</if>
	    </where>
		ORDER BY materialType, createTime DESC
    </select>
    
    <select id="getOrderList" resultMap="queryList_resultMap" parameterType="Material">
		 SELECT id, depot, materialType, proNO, proName, proSpeci, masterOrSlave, lossType, consumption, totalNum, 
           analyzeNum, retailPrice, state, remark, createTime, updateTime, (IFNULL(analyzeNum,0) - totalNum) AS conNum
          FROM t_sale_material  
		<where>
			(IFNULL(analyzeNum,0) - totalNum) > 0 and analyzeNum is not null
			<if test="materialType != null"> and materialType = #{materialType}</if>
			<if test="proNO != null and proNO != ''"> and proNO like concat('%', '${proNO}', '%')</if>
			<if test="proName != null and proName != ''"> and proName like concat('%', '${proName}', '%')</if>
		</where>
		ORDER BY materialType, createTime DESC
    </select>
    
    <select id="getOrderListPage" resultMap="queryList_resultMap" parameterType="Material">
		 SELECT id, depot, materialType, proNO, proName, proSpeci, masterOrSlave, lossType, consumption, totalNum, 
           analyzeNum, retailPrice, state, remark, createTime, updateTime, (IFNULL(analyzeNum,0) - totalNum) AS conNum
          FROM t_sale_material  
		<where>
			(IFNULL(analyzeNum,0) - totalNum) > 0 and analyzeNum is not null
			<if test="po.materialType != null"> and materialType = #{po.materialType}</if>
			<if test="po.proNO != null and po.proNO != ''"> and proNO like concat('%', '${po.proNO}', '%')</if>
			<if test="po.proName != null and po.proName != ''"> and proName like concat('%', '${po.proName}', '%')</if>
		</where>
		ORDER BY materialType, createTime DESC
    </select>
    
    <select id="isExists" parameterType="Material" resultType="int">
		SELECT count(1) FROM t_sale_material
		WHERE proNO = #{proNO} AND masterOrSlave = #{masterOrSlave}
		<if test ="id !=null"> AND id = #{id} </if>
	</select>
</mapper>