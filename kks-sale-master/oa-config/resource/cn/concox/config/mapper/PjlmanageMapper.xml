<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
                        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.concox.app.basicdata.mapper.PjlmanageMapper">
	<resultMap type="Pjlmanage" id="Pjlmanage">
	</resultMap>

	<sql id="selectAllFields">
		SELECT pjlId, marketModel, model, proNO, proName, proSpeci, retailPrice, hourFee, otherModel, consumption, remark, masterOrSlave
		FROM t_sale_pjlmanage
	</sql>

	<select id="getPjlmanageList" resultType="Pjlmanage">
		<include refid="selectAllFields" />
		<where>
			<if test="po.marketModel != null and po.marketModel != ''">
				and marketModel like concat('%', '${po.marketModel}', '%')
			</if>
			<if test="po.model != null and po.model != '' and (po.searchType == null or po.searchType == '') ">
				and model like concat('%', '${po.model}', '%')
			</if>
			<if test="po.proNO != null and po.proNO != ''">
				and proNO like concat('%', '${po.proNO}', '%')
			</if>
			<if test="po.proName != null and po.proName != ''">
				and proName like concat('%', '${po.proName}', '%')
			</if>
			<if test="po.proSpeci != null and po.proSpeci != ''">
				and proSpeci like concat('%', '${po.proSpeci}', '%')
			</if>
			<if test="po.otherModel != null and po.otherModel != ''">
				and otherModel like concat('%', '${po.otherModel}', '%')
			</if>
			<if test="po.masterOrSlave != null and po.masterOrSlave != ''">
				and masterOrSlave = #{po.masterOrSlave}
			</if>
			<!-- 维修选择配件料使用 -->
			<if test="po.searchKey != null and po.searchKey != '' ">
	   			and proName like concat('%', '${po.searchKey}', '%')
	   		</if>
			<if test="po.model != null and po.model != '' and po.searchType == 'modelSearch'"><!-- 查询当前维修报价或维修的主板型号的数据 -->
				and model = #{po.model}
			</if>
	   		<!-- 销售配件料组合，市场型号 -->
	   		<if test="po.groupsearchKey != null and po.groupsearchKey != '' ">
	   			and marketModel = #{po.groupsearchKey}
	   		</if>
	   		<!-- 报价配件料组合，主板型号 -->
	   		<if test="po.priceGroupsearchKey != null and po.priceGroupsearchKey != '' ">
	   			and model = #{po.priceGroupsearchKey}
	   		</if>
		</where>
		<choose>
			<!-- 维修显示配件料按物料名称、编码排列 -->
			<when test="po.model != null and po.model != '' and po.searchType == 'modelSearch'">
				order by proName, proNO
			</when>
			<!-- 报价配件料组合及其他按市场型号、编码排列 -->
			<otherwise>
				order by marketModel, model, proNO
			</otherwise>
		</choose>
	</select>

	<insert id="insert" parameterType="Pjlmanage">
		 INSERT INTO t_sale_pjlmanage (
            marketModel, model, proNO, proName, proSpeci, retailPrice, hourFee,
            otherModel, consumption, remark, masterOrSlave
        ) VALUES (
            #{marketModel}, #{model}, #{proNO}, #{proName}, #{proSpeci}, #{retailPrice}, #{hourFee},
            #{otherModel}, #{consumption}, #{remark}, #{masterOrSlave}
        )
	</insert>

	<update id="update" parameterType="Pjlmanage">
		UPDATE t_sale_pjlmanage
		<set>
			<if test="marketModel != null and marketModel != ''"> marketModel = #{marketModel}, </if>
			<if test="model != null and model != ''"> model = #{model}, </if>
            <if test="proNO != null and proNO != ''"> proNO = #{proNO}, </if>
            <if test="proName != null and proName != ''"> proName = #{proName}, </if>
            <if test="proSpeci != null and proSpeci != ''"> proSpeci = #{proSpeci}, </if>
            <if test="retailPrice != null"> retailPrice = #{retailPrice}, </if>
            <if test="hourFee != null"> hourFee = #{hourFee}, </if>
            <if test="consumption != null"> consumption = #{consumption}, </if>
            <if test="masterOrSlave != null and masterOrSlave != ''"> masterOrSlave = #{masterOrSlave}, </if>
            <if test="otherModel != null"> otherModel = #{otherModel}, </if>
            <if test="remark != null"> remark = #{remark}, </if>
		</set>
		WHERE pjlId = #{pjlId}
	</update>
	
	<delete id="delete">
		DELETE FROM t_sale_pjlmanage WHERE pjlId = #{pjlId}
	</delete>

	<select id="getT"  resultType="Pjlmanage">
		<include refid="selectAllFields" />
		WHERE pjlId = #{id}
	</select>
	
	<select id="getPjlByProNO"  resultType="Pjlmanage">
		<include refid="selectAllFields" />
		WHERE proNO = #{proNO}
		LIMIT 1
	</select>

	<!-- 根据市场型号、主板型号、编号、M|T 判断是否是同一数据 -->
	<select id="isExists"  resultType="int">
		SELECT count(1) FROM t_sale_pjlmanage
		WHERE marketModel = #{marketModel} AND model = #{model} AND proNO = #{proNO} AND masterOrSlave = #{masterOrSlave}
		<if test="pjlId !=null"> AND pjlId != #{pjlId} </if>
	</select>

	<!-- 判断是否被引用 -->
	<select id="findCountByPjl"  resultType="int">
		SELECT SUM(a.num) FROM(
			SELECT COUNT(1) AS num FROM t_sale_workflow_related AS tswr WHERE FIND_IN_SET(#{pjlId}, tswr.matDesc)
			UNION
			SELECT COUNT(1) AS num FROM t_sale_repair_price AS tsrp WHERE FIND_IN_SET(#{pjlId}, tsrp.pjlDesc)
			UNION
			SELECT COUNT(1) AS num FROM t_sale_repair_price_temp AS tsrpt WHERE FIND_IN_SET(#{pjlId}, tsrpt.pjlDesc)
			UNION 
			SELECT COUNT(1) AS num FROM t_sale_price_pj AS pj WHERE FIND_IN_SET(#{pjlId}, pj.mid)
			UNION 
			SELECT COUNT(1) AS num FROM t_sale_grouppj_details AS gpd WHERE FIND_IN_SET(#{pjlId}, gpd.pjlId)
			UNION 
			SELECT COUNT(1) AS num FROM t_sale_grouppj_price AS gpp WHERE FIND_IN_SET(#{pjlId}, gpp.pjlDesc)
			UNION 
			SELECT COUNT(1) AS num FROM t_sale_material AS mat WHERE FIND_IN_SET( 
				(SELECT proNO FROM t_sale_material where proNO = (SELECT proNO FROM t_sale_pjlmanage where pjlId = #{pjlId})) , mat.proNO)
		) a
	</select>
	
	<!-- 配件料匹配  -->
	<select id="getGRoupConcat" resultType="String">
   		SELECT GROUP_CONCAT(pjl.proName SEPARATOR' | ') AS pjlDesc FROM t_sale_pjlmanage AS pjl 
		WHERE pjl.pjlId IN 
		<foreach collection="array" item="id" open="(" separator="," close=")">
			#{id}
		</foreach>
    </select>
    
   <!-- 根据id配件料匹配  -->
	<select id="getListByIds" resultType="Pjlmanage">
   		SELECT pjl.pjlId, pjl.proName FROM t_sale_pjlmanage AS pjl 
		WHERE pjl.pjlId IN 
		<foreach collection="array" item="id" open="(" separator="," close=")">
			#{id}
		</foreach>
    </select>

	<!-- 维修和报价根据主板型号查询所有备选型号及本身型号  -->
	<select id="getAllOherModel" resultType="String">
   		SELECT CONCAT(model,',',GROUP_CONCAT(otherModel SEPARATOR ',')) FROM t_sale_pjlmanage
   		WHERE model = #{model}
    </select>
    
    <!-- 维修和报价根据物料id获得配件料价格  -->
	<select id="getSumPriceByIds" resultType="BigDecimal">
   		SELECT sum(retailPrice*consumption) FROM t_sale_pjlmanage
   		WHERE pjlId IN 
   		<foreach collection="array" item="id" open="(" separator="," close=")">
			#{id}
		</foreach>
    </select>
    
    <!-- 导入时判断数据存在后获取该条数据  -->
    <select id="getOnePjlInfo" resultType="Pjlmanage">
   		SELECT * FROM t_sale_pjlmanage
   		WHERE marketModel = #{marketModel} AND model = #{model} AND proNO = #{proNO} AND masterOrSlave = #{masterOrSlave}
   		limit 1
    </select>
    
    <!-- 配件料组合根据选中的配件料ids，获取配件料信息列表-->
	<select id="getPjlByPjlIds"  resultType="Pjlmanage">
		SELECT * FROM t_sale_pjlmanage
		WHERE pjlId IN 
		<foreach collection="array" item="id" open="(" separator="," close=")">
			#{id}
		</foreach>
	</select>
	
	  <!-- 报价配件料组合获取所有配件料主板型号 -->
	<select id="getAllPjlModels" resultType="String">
		SELECT GROUP_CONCAT(distinct model) FROM t_sale_pjlmanage
	</select>
	
	  <!-- 销售配件料组合获取所有配件料市场型号 -->
	<select id="getAllPjlMarketModels" resultType="String">
		SELECT GROUP_CONCAT(distinct marketModel) FROM t_sale_pjlmanage
	</select>
</mapper>